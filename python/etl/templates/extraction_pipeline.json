{
    "objects": [
        {
            "id": "Default",
            "name": "Default",
            "schedule": { "ref": "ETLSchedule" },
            "scheduleType": "cron",
            "failureAndRerunMode": "CASCADE",
            "resourceRole": "${resources.EC2.iam_instance_profile}",
            "role": "${resources.DataPipeline.role}",
            "pipelineLogUri": "s3://${object_store.s3.bucket_name}/_logs/${object_store.s3.prefix}/",
            "region": "${resources.VPC.region}",
            "maximumRetries": "2"
        },
        {
            "id": "ETLSchedule",
            "name": "Run once on demand",
            "type": "Schedule",
            "period": "1 days",
            "startDateTime": "#{myStartDateTime}",
            "occurrences": "1"
        },
        {
            "id": "SNSParent",
            "topicArn": "arn:aws:sns:${resources.VPC.region}:${resources.VPC.account}:${resource_prefix}-status"
        },
        {
            "id": "SuccessNotification",
            "type": "SnsAlarm",
            "parent": { "ref": "SNSParent" },
            "subject": "ETL Extraction Success: ${object_store.s3.prefix} at #{node.@scheduledStartTime}",
            "message": "Completed last action successfully at #{node.@actualEndTime}\\nLast node: #{node.name}\\nPipelineId: #{node.@pipelineId}\\nLog directory: #{node.pipelineLogUri}#{node.@pipelineId}"
        },
        {
            "id": "FailureNotification",
            "type": "SnsAlarm",
            "parent": { "ref": "SNSParent" },
            "subject": "ETL Extraction Failure: ${object_store.s3.prefix} at #{node.@scheduledStartTime}",
            "message": "Failed step #{node.name} at #{node.@actualEndTime}\\nPipelineId: #{node.@pipelineId}\\nSphere: #{node.@sphere}\\nCancellation reason: #{node.cancellationReason}\\nLog directory: #{node.pipelineLogUri}#{node.@pipelineId}\\n\\nError stacktrace: #{node.errorStackTrace}"
        },
        {
            "id": "ResourceParent",
            "keyPair": "${resources.key_name}",
            "subnetId": "${resources.VPC.public_subnet}",
            "terminateAfter": "#{myTimeout} Hours"
        },
        {
            "id": "ETLCluster",
            "name": "ETL EMR Cluster",
            "type": "EmrCluster",
            "parent": { "ref": "ResourceParent" },
            "releaseLabel": "${resources.EMR.release_label}",
            "masterInstanceType": "${resources.EMR.master.instance_type}",
            "coreInstanceType": "${resources.EMR.core.instance_type}",
            "coreInstanceCount": "${resources.EMR.core.instance_count}",
            "emrManagedMasterSecurityGroupId": "${resources.EMR.master.managed_security_group}",
            "emrManagedSlaveSecurityGroupId": "${resources.EMR.core.managed_security_group}",
            "additionalMasterSecurityGroupIds": [
                "${resources.EC2.public_security_group}",
                "${resources.VPC.whitelist_security_group}"
            ],
            "bootstrapAction": "s3://${object_store.s3.bucket_name}/${object_store.s3.prefix}/bin/bootstrap.sh,${object_store.s3.bucket_name},${object_store.s3.prefix}",
            "applications": [ "Spark", "Ganglia", "Zeppelin", "Sqoop" ],
            "configuration": []
        },
        {
            "id": "EmrActivityUpstreamExtract",
            "name": "Arthur Extract (EMR Activity)",
            "type": "EmrActivity",
            "step": "/var/lib/aws/emr/step-runner/hadoop-jars/command-runner.jar,/tmp/redshift_etl/venv/bin/arthur.py,--config,/tmp/redshift_etl/config/,extract,--keep-going,--prolix,--prefix,${object_store.s3.prefix},#{myExtractArguments}",
            "runsOn": { "ref": "ETLCluster" },
            "maximumRetries": "0"
        }
    ],
    "parameters": [
        {
            "id": "myStartDateTime",
            "type": "String",
            "optional": "false",
            "description": "UTC ISO formatted string giving the datetime to start the pipeline",
            "watermark": "2525-01-01T00:00:00",
            "helpText": "When should the pipeline start?"
        },
        {
            "id": "myExtractArguments",
            "type": "String",
            "optional": "false",
            "description": "Arguments for the extract command (must be comma separated)",
            "watermark": "*",
            "helpText": "Which tables should we extract?"
        },
        {
            "id": "myTimeout",
            "type": "Integer",
            "optional": "true",
            "description": "How many hours to allow the pipeline to run before terminating it",
            "watermark": "6",
            "default": "6",
            "helpText": "How long can the pipeline run?"
        }
    ],
    "values": {
        "myStartDateTime": "2525-01-01T00:00:00",
        "myExtractArguments": "",
        "myTimeout": "6"
    }
}
